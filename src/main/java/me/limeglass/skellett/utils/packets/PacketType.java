package me.limeglass.skellett.utils.packets;

public enum PacketType {
	
	//Updated: 11/8/2017
	//NMS version: 1.12.2
	
	Packet,
	PacketCompressor,
	PacketDataSerializer,
	PacketDecoder,
	PacketDecompressor,
	PacketDecrypter,
	PacketEncoder,
	PacketEncrypter,
	PacketEncryptionHandler,
	
	PacketHandshakingInListener,
	PacketHandshakingInSetProtocol,
	
	PacketListener,
	PacketListenerPlayIn,
	PacketListenerPlayOut,
	
	PacketLoginInEncryptionBegin,
	PacketLoginInListener,
	PacketLoginInStart,
	PacketLoginOutDisconnect,
	PacketLoginOutEncryptionBegin,
	PacketLoginOutListener,
	PacketLoginOutSetCompression,
	PacketLoginOutSuccess,
	
	PacketPlayInAbilities,
	PacketPlayInAdvancements,
	PacketPlayInArmAnimation,
	PacketPlayInAutoRecipe,
	PacketPlayInBlockDig,
	PacketPlayInBlockPlace,
	PacketPlayInBoatMove,
	PacketPlayInChat,
	PacketPlayInClientCommand,
	PacketPlayInCloseWindow,
	PacketPlayInCustomPayload,
	PacketPlayInEnchantItem,
	PacketPlayInEntityAction,
	PacketPlayInFlying,
	PacketPlayInHeldItemSlot,
	PacketPlayInKeepAlive,
	PacketPlayInRecipeDisplayed,
	PacketPlayInResourcePackStatus,
	PacketPlayInSetCreativeSlot,
	PacketPlayInSettings,
	PacketPlayInSpectate,
	PacketPlayInSteerVehicle,
	PacketPlayInTabComplete,
	PacketPlayInTeleportAccept,
	PacketPlayInTransaction,
	PacketPlayInUpdateSign,
	PacketPlayInUseEntity,
	PacketPlayInUseItem,
	PacketPlayInVehicleMove,
	PacketPlayInWindowClick,
	
	PacketPlayOutAbilities,
	PacketPlayOutAdvancements,
	PacketPlayOutAnimation,
	PacketPlayOutAttachEntity,
	PacketPlayOutAutoRecipe,
	PacketPlayOutBed,
	PacketPlayOutBlockAction,
	PacketPlayOutBlockBreakAnimation,
	PacketPlayOutBlockChange,
	PacketPlayOutBoss,
	PacketPlayOutCamera,
	PacketPlayOutChat,
	PacketPlayOutCloseWindow,
	PacketPlayOutCollect,
	PacketPlayOutCombatEvent,
	PacketPlayOutCustomPayload,
	PacketPlayOutCustomSoundEffect,
	PacketPlayOutEntity,
	PacketPlayOutEntityDestroy,
	PacketPlayOutEntityEffect,
	PacketPlayOutEntityEquipment,
	PacketPlayOutEntityHeadRotation,
	PacketPlayOutEntityMetadata,
	PacketPlayOutEntityStatus,
	PacketPlayOutEntityTeleport,
	PacketPlayOutEntityVelocity,
	PacketPlayOutExperience,
	PacketPlayOutExplosion,
	PacketPlayOutGameStateChange,
	PacketPlayOutHeldItemSlot,
	PacketPlayOutKeepAlive,
	PacketPlayOutKickDisconnect,
	PacketPlayOutLogin,
	PacketPlayOutMap,
	PacketPlayOutMapChunk,
	PacketPlayOutMount,
	PacketPlayOutMultiBlockChange,
	PacketPlayOutNamedEntitySpawn,
	PacketPlayOutNamedSoundEffect,
	PacketPlayOutOpenSignEditor,
	PacketPlayOutOpenWindow,
	PacketPlayOutPlayerInfo,
	PacketPlayOutPlayerListHeaderFooter,
	PacketPlayOutPosition,
	PacketPlayOutRecipes,
	PacketPlayOutRemoveEntityEffect,
	PacketPlayOutResourcePackSend,
	PacketPlayOutRespawn,
	PacketPlayOutScoreboardDisplayObjective,
	PacketPlayOutScoreboardObjective,
	PacketPlayOutScoreboardScore,
	PacketPlayOutScoreboardTeam,
	PacketPlayOutSelectAdvancementTab,
	PacketPlayOutServerDifficulty,
	PacketPlayOutSetCooldown,
	PacketPlayOutSetSlot,
	PacketPlayOutSpawnEntity,
	PacketPlayOutSpawnEntityExperienceOrb,
	PacketPlayOutSpawnEntityLiving,
	PacketPlayOutSpawnEntityPainting,
	PacketPlayOutSpawnEntityWeather,
	PacketPlayOutSpawnPosition,
	PacketPlayOutStatistic,
	PacketPlayOutTabComplete,
	PacketPlayOutTileEntityData,
	PacketPlayOutTitle,
	PacketPlayOutTransaction,
	PacketPlayOutUnloadChunk,
	PacketPlayOutUpdateAttributes,
	PacketPlayOutUpdateHealth,
	PacketPlayOutUpdateTime,
	PacketPlayOutVehicleMove,
	PacketPlayOutWindowData,
	PacketPlayOutWindowItems,
	PacketPlayOutWorldBorder,
	PacketPlayOutWorldEvent,
	PacketPlayOutWorldParticles,
	
	PacketPrepender,
	PacketSplitter,
	
	PacketStatusInListener,
	PacketStatusInPing,
	PacketStatusInStart,
	PacketStatusListener,
	PacketStatusOutListener,
	PacketStatusOutPong,
	PacketStatusOutServerInfo;

	public boolean isClient() {
		return name().startsWith("PacketPlayIn") || name().startsWith("PacketStatusIn") || name().startsWith("PacketLoginIn") || name().startsWith("PacketHandshakingIn");
	}

	public boolean isServer() {
		return name().startsWith("PacketPlayOut") || name().startsWith("PacketStatusOut") || name().startsWith("PacketLoginOut");
	}
}
